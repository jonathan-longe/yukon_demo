version: '3.8'
networks:
  external:
    driver: bridge
  internal:
    driver: bridge
volumes:
  drupal-data:
  db-data:
services:
  rabbitmq:
    build: ./rabbitmq
    environment:
        # The RABBITMQ_DEFAULT_USER is used
        # to connect to the web admin
        RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}"
        RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASS}"
        RABBITMQ_LOGS: "WARNING"
    networks:
      - external
      - internal
    ports:
        - "7420:15672" # Web admin port
        # - "5672:5672"   # Do not expose this port in production
  mysql:
    image: mariadb:latest
    container_name: mysql
    restart: unless-stopped
    env_file: .env
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - internal
      - external
    ports:
    - 7423:3306
  drupal:
    image: drupal:9.4.5
    ports:
      - 7422:80
    container_name: drupal
    depends_on:
      - mysql
      - ingestor
    restart: unless-stopped
    networks:
      - internal
      - external
    volumes:
      - drupal-data:/var/www/html
  ingestor:
    build:
      context: python
      dockerfile: ingestor/Dockerfile
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_HOST: "${RABBITMQ_HOST}"
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
    networks:
      - external
    ports:
      - 7421:5000
#  listener:
#    build:
#      context: python
#      dockerfile: listener/Dockerfile
#    depends_on:
#      - database_api
#      - rabbitmq
#    environment:
#      RABBITMQ_HOST: "${RABBITMQ_HOST}"
#      RABBITMQ_USER: "${RABBITMQ_USER}"
#      RABBITMQ_PASS: "${RABBITMQ_PASS}"
#      CALLBACK_FN_NAME: "write_to_database"
#      X_STREAM_OFFSET: "next"
#    networks:
#      - internal
#  viewer:
#    build:
#      context: python
#      dockerfile: listener/Dockerfile
#    depends_on:
#      - rabbitmq
#    container_name: viewer
#    environment:
#      RABBITMQ_HOST: "${RABBITMQ_HOST}"
#      RABBITMQ_USER: "${RABBITMQ_USER}"
#      RABBITMQ_PASS: "${RABBITMQ_PASS}"
#      CALLBACK_FN_NAME: "echo_to_console"
#      X_STREAM_OFFSET: "first"
#    networks:
#      - internal
  emailer:
    build:
      context: python
      dockerfile: listener/Dockerfile
#    depends_on:
#      - rabbitmq
    container_name: emailer
    environment:
      RABBITMQ_HOST: "${RABBITMQ_HOST}"
      RABBITMQ_USER: "${RABBITMQ_USER}"
      RABBITMQ_PASS: "${RABBITMQ_PASS}"
      CALLBACK_FN_NAME: "send_via_email"
      X_STREAM_OFFSET: "first"
      MAILGUN_API_KEY: ${MAILGUN_API_KEY}
      MAILGUN_SENDING_URL: ${MAILGUN_SENDING_URL}
    networks:
      - internal
  database_api:
    build:
      context: python
      dockerfile: database_api/Dockerfile
    depends_on:
      - mysql
    environment:
      SQLALCHEMY_DATABASE_URI: "${SQLALCHEMY_DATABASE_URI}"
    networks:
      - internal
